// DFS algorithm
public class Solution {
    public ArrayList<ArrayList<Integer>> combine(int n, int k) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(n==0) return res;
        ArrayList<Integer> list = new ArrayList<Integer>();
        addNum(res, list, 1, n, k);
        return res;
    }
    
    public void addNum(ArrayList<ArrayList<Integer>> res, ArrayList<Integer> list, int start, int n, int k) {
        if(k==0) {
            res.add(new ArrayList<Integer>(list));
            return;
        }
        for(int i=start; i<=n-k+1; i++) {
            list.add(i);
            addNum(res, list, i+1, n, k-1);
            list.remove(list.size()-1);
        }
    }
}