// DFS algorithm
public class Solution {
    public ArrayList<ArrayList<Integer>> subsets(int[] S) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(S.length==0) return res;
        ArrayList<Integer> list = new ArrayList<Integer>();
        Arrays.sort(S);
        addNum(res, list, S, 0);
        res.add(new ArrayList<Integer>());
        return res;
    }
    
    public void addNum(ArrayList<ArrayList<Integer>> res, ArrayList<Integer> list, int[] S, int start) {
        if(start==S.length) {
            return;
        }
        for(int i=start; i<S.length; i++) {
            list.add(S[i]);
            res.add(new ArrayList<Integer>(list));
            addNum(res, list, S, i+1);
            list.remove(list.size()-1);
        }
    }
}